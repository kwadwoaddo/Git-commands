# Initialise Git
$ Git init

#
✅ GIT ESSENTIALS CHEAT SHEET

🔧 SETUP
git config --global user.name "Your Name"
git config --global user.email "you@example.com"

📁 INITIALIZE OR CLONE
git init                         # Start a new Git repo
git clone <repo-url>            # Clone an existing repo

📄 STAGING & COMMITTING
git status                      # See changed files
git add .                       # Stage all files
git add <file>                  # Stage specific file
git commit -m "Message"         # Commit staged changes

🌳 BRANCHING
git branch                      # List branches
git branch <name>              # Create new branch
git checkout <name>            # Switch to branch
git checkout -b <name>         # Create + switch to branch
git merge <branch>             # Merge branch into current

🔁 PUSHING & PULLING
git remote -v                                # Show remotes
git remote add origin <repo-url>             # Add remote
git remote set-url origin <repo-url>         # Change remote URL

git push -u origin main                      # Push first time + link to remote
git push                                     # Push changes
git pull                                     # Pull latest changes

📦 STASHING (TEMPORARY SAVES)
git stash                                    # Save changes temporarily
git stash pop                                # Re-apply stashed changes

🔍 LOGS & HISTORY
git log                                      # View commit history
git log --oneline                            # Short commit history

❌ UNDO / RESET
git reset <file>                             # Unstage file
git checkout -- <file>                       # Discard file changes
git reset --hard                             # Reset everything (use carefully!)

🔄 SYNC FORKS (ADVANCED)
git remote add upstream <url>                # Add upstream repo
git fetch upstream
git merge upstream/main

🔄 Working with Remotes

git remote add origin <url>         # Link a remote repo
git remote -v                       # Show remotes
git remote rename <old> <new>       # Rename a remote
git remote remove <name>            # Remove a remote
